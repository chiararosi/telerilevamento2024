#LEZIONE 9 23/04

# How to import external data in R
# 07 importing external data
#finora avevamo un pacchetto che è imageRy che presenta tutti i dati stanno già qua dentro, con im.list() e im.import() abbiamo tutti i dati
#quello che faremo oggi è uscire da R, andare in una cartella del nostro computer, andare dentro la nostra cartella con una funzione ed importare il dato
#possiamo andare su guithub e cercare dentro user ducciorocchini
#scarichiamo l'immagine eclissi presente in telerilevamento di ducciorocchini 
#utilizziamo ora questa immagine eclissi
#importeremo ora questo oggetto, dopo aver salvato questa immagine sul computer
#la prima cosa che c'è da fare è riprendere con library() i pacchetti che ci servono

library(terra)
library(imageRy)

#possiamo usare ora la funzione setwd() ovvero set work directory, spieghiamo al sistema quale è la cartella del nostro computer che useremo per caricare i dati
#per vedere il percorso completo c'è da cliccare il tasto destro e vedere "properties" oppure "proprietà", troviamo il percorso=path
#siccome stiamo uscendo da R perché stiamo spiegando quale è la working directories c'è da usare le virgolette 
setwd("/Users/kiko9/Downloads/file") 

# Importing data from external sources
# make use of slash instead of backslash
# Example: C://Documents/ instead of C:\\Documents\ 
#il blackslash non si deve usare, lo utilizza windows, noi dobbiamo usare lo slash

#adesso possiamo importare l'immagine con il pacchetto terra, in cui ha una funzione che è rast(), serve a creare degli oggetti raster spaziali (sarebbe lo stesso 
#i raster sono la matrice di dati di pixel
#quindi è rast() dell'immagine che abbiamo scaricato
#dobbiamo però vedere come è fatta l'immagine e come si chiama su windows
eclissi <- rast("eclissi.png")
#il warning è perché non è una immagine geolocalizzata quindi non vede l'estensione non in senso informatico ma in senso spaziale
#facciamo un plot di questi immagine
# plotting the data
#con la funzione di imageRy im.plotRGB() 
im.plotRGB(eclissi, 1, 2, 3)
im.plotRGB(eclissi, 3, 2, 1)
im.plotRGB(eclissi, 2, 3, 1)
im.plotRGB(eclissi, 2, 1, 3)
#visualizziamo le immagini modificando le bande in maniera diversa
#questo è il metodo con cui si può andare su qualsiasi sito del pianeta, scaricare l'immagine ed importarla con questo metodo
#con questa immagine possiamo fare quello che ci pare, come una differenza tra le bande
# band difference
dif = eclissi[[1]] - eclissi[[2]]
#eclissi primo livello- eclissi secondo livello, banda rosso- banda verde
plot(dif)
#ho fatto la differenza tra le due bande (che avevamo fatto per creare gli indici spettrali)

# import another image
#importiamo un'altra immagine, andiamo su internet, digitiamo Earth Observatory, è il sito della NASA nel quale ci sono molte immagini
#salviamo l'immagine, salvandola nella stessa cartella di prima 
#lo script data sources di ducciorocchini presenta tutti i siti dove possiamo prendere i dati disponibili
#i dati Sentinel dell'ESA sono immagini a 10 metri ogni 14 giorni, per scaricarli ha messo un video, ci vuole un po' di tempo
#un altro sito è il sito ESA della NASA, possiamo scaricare sia i dati Landsat a 30 metri di risoluzione, sia i dati MODIS a 50 metri e più di risoluzione, il video ci fa vedere come possiamo scaricare questi dati
#l'ultimo sito sempre dell'ESA è Copernicus, c'è una serie di dati disponibili, set per set
#discorso sui dati: 1 step, scaricare l'immagine dal web, sul nostro computer, 2 step salviamo, 3 step setwd(), 4 step usiamo terra, la funzione rast() per importare il dato
#vediamo cosa è Copernicus, su telerilevamento di ducciorocchini c'è una presentazione di copernicus in cui ci fa vedere tutti i dati che sono a disposizione
#NON C'è MAI DA SCRIVERE TROPPO SULLE PRESENTAZIONI
#Copernicus ci fornisce i dati su tante variabili ambientali direttamente relazionate al clima, ai cambiamenti climatici e i loro effetti sulla vegetazione, sul ghiaccio, sull'acqua ecc
#sono 4 principali blocchi di dati più altre due variabili
#c'è la vegetazione, dove ci sono gli indici spettrali, poi l'energia, l'acqua e il ghiaccio. In più ci sono gli hot spots dove ci sono varie variabili e poi c'è il groundbased ovvero i dati della biodiversità
#a noi interessano i primi quattro blocchi perchè sono le immagini del satellite
#queste sono tutte le variabili che riguardano la vegetazione (nella slide), la più facile è la Leaf Area Index, è il calcolo dell'area fogliare di una pianta in generale, che viene stimato dal satellite
#misura la dimensione della foglia ed il suo spessore
#abbiamo la frazione, la quantità di copertura vegetale che fa fotosintesi, relazioneta alla leaf area index, e rappresenta l'estensione orizzontale della vegetazione
#FAPAR è la frazione, la quantità di radiazione che naturalmente partecipa alla fotosintesi, per cui fotosintesi PAR, quanta luce del sole viene assorbita dalle piante per fare la fotosintesi
#altra variabile l'NDVI visto, che è la differenza tra l'infrarosso ed il rosso, perchè le piante riflettono l'infrarosso ed assorbono il rosso
#abbiamo la condizione di salute, ovvero si va a vedere quale è il valore attuale di NDVI in funzione per esempio di una serie temporale
#la produttività della pianta però in funzione del tempo. Misuro per es. 20 anni di produttività della pianta, per produttività si intende quanta biomassa fa la pianta
#se l'NDVI è più basso della serie temporale vuol dire che c'è qualcosa che non va, se è più alto la pianta sta bene
#la produttività secca è quando si va a terra e si misura la quantità di biomassa seccata, in questa maniera abbiamo la quantità di biomassa secca della pianta
# abbiamo poi la copertura dell'area, vediamo quante piante ci sono nel territorio
# un'altra variabile è relazionata al suolo, ma siccome al suolo sono relazionate anche le piante si chiama Soil Water Index, in questo caso è l'umidità del suolo
#oltre all'umidità del suolo abbiamo anche la variabile Surf. Soil Moisture, che indica l'umidità del suolo ma solo del primo strato, nei primi pochi centrimetri del suolo
#per l'energia invece abbiamo altre variabili che sono
#la riflettanza della "top of canopy" ovvero della parte più alta degli oggetti, non necessariamente della vegetazione, in generale riguarda quanta luce generalmente viene riflessa
#si chiama TOC reflectance
#l'albedo, è considerato come degli oggetti, considera non solo la TOC ma anche degli oggetti del suolo che ci sta sotto, ed è la quantità di radiazione che viene riflessa
#infine la LST, Land Surface Temperature, è la temperatura al suolo, non è la temperatura dell'aria, ma è quella del suolo
#Water Cycle riguarda il ciclo dell'acqua di gran parte delle superficie di acqua dolce del pianeta
#ci sono anche satelliti che misurano il ciclo dell'acqua degli oceani che si chiamano NOAA
#abbiamo Lake Surface Water Temperature, è come quella del suolo ma dell'acqua, ci sono dei parametri per l'acqua
#abbiamo la qualità dell'acqua, ci sono dei sensori che misurano (per es. i diossidi di azoto che abbiamo visto per l'area), misurano varie particelle nell'acqua
#terza variabile è l'estensione delle acque, ci sono delle acque del pianeta che si chiamano ... che sono dei laghi che però si prosciugano durante la stagione secca, quindi si può misurare quale è l'estensione delle acque durante l'anno
#un'altra variabile stimata è il livello dell'acqua, non è il vero livello, ma sulla base dei movimenti orizzontali dell'acqua si stima quanto è il suo livello verticale
#e anche sulla riflettanza ... rispetto all'acqua pura si capisce la sua altezza e profondità
#l'ultima è la criosfera
#c'è l'estensione del ghiaccio dei laghi e l'estensione della neve
#Snow cover calcola semplicemente la quantità di neve sul pianeta
#poi abbiamo il ghiaccio nei laghi, stima ovviamente
#l'altra variabile è l'equivalente in acqua della neve, è la stessa identica variabile, non è sempre disponibile, è una variabile un po' ostica

#ritorniamo ora con i dati di copernicus
#su data_sources troviamo Copernicus, ci consiglia di registrarci sul sito
#dopo esserci registrati possiamo scaricare i dati
#ci sono dei dati con GigaBite molto elevati
#Soil Moisture-> usando terra, con rast() abbiamo la mappa
#possiamo fare un plot, come plot(soil), ci sono due variabili, una si chiama SSM, che è la variabile vera del Soil Moisture, ed accanto SSM ... che ci dà l'errore della variabile
#se vogliamo plottare solo il primo livello dei due basterà fare plot(soil[[1]]) fare un subset con le parentesi quadre come abbiamo sempre fatto
# importing Copernicus data
soil <- rast("c_gls_SSM1km_202404160000_CEURO_S1CSAR_V1.2.1.nc")
plot(soil)
plot(soil[[1]])
#così avremo solo le strisce del primo livello della variabile che ci interessa
#quando andremo nella nostra area di studio a piacere, è inutile avere l'immagine sull'intero globo, per cui tagliamo l'immagine, usiamo per es. le coordinate per tagliare l'immagine
#usiamo le coordinate per fare questo ritaglio
#come si fa-> c'è bisogno di un codice
# cropping data
#prima di tutto si definisce una estensione es. ext
#definisco l'estensione con dei minimi e dei massimi, x minima, x massima, y minima ed y massima
#farò così un vettore, un array tramite c che le concateno
ext <- c(25, 35, 58, 62)
#a questo punto posso fare un "crop", la funzione è proprio crop() nella variabile soil fatta con l'estensione ext
soilcrop <- crop(soil, ext)
#ottengo così una nuova variabile che la posso plottare
#posso fare un plot
plot(soilcrop)
#se voglio plottare solo il primo strato
plot(soilcrop[[1]])

#i passaggi quindi quali sono
#definisco l'estensione: x min, x max, y min ed y max
#faccio un crop() della variabile, della mappa iniziale, con l'estensione che abbiamo appena creato, la chiamo in un altro modo
#poi faccio il plot() della nuova variabile
#se voglio fare il plot di solo la prima banda o perlomeno solo della variabile di interesse utilizzerò [[]]
#abbiamo così il ritaglio
#quindi con oggi abbiamo imparato ad importare i dati dall'esterno e ritagliare le mappe, basta avere le coordinate
#facendolo con le coordinate ci mantiene sempre la stessa area di studio in funzione di varie variabili o vari tempi della stessa variabile
#per esempio io avevo varie variabili nella stessa area di studio, con crop() avrò sempre la stessa estensione delle varie variabili
# How to import external data in R

install.packages("RNetCDF")
library(RNetCDF) # needed to read Copernicus .nc data #per leggere file NetCDF dopo il download manuale
library(terra)
library(imageRy)

setwd("/home/duccio/Downloads") 
# make use of slash instead of backslash
# Example: C://Documents/ instead of C:\\Documents\ 

# read the data
eclissi <- rast("eclissi.png") 
# like i.import in imageRy
# rast() is a function in the terra package
eclissi

# plot the data
im.plotRGB(eclissi, 1, 2, 3)
im.plotRGB(eclissi, 2, 1, 3)
im.plotRGB(eclissi, 3, 1, 2)

# different methods of plotting
par(mfrow=c(1,2))
im.plotRGB(eclissi, 2, 1, 3)
plotRGB(eclissi, 3, 1, 3)

# band differencing
dif = eclissi[[1]] - eclissi[[2]]

# import another image
# Exercise: import another image from the net!
cratere <- rast("cratere")
im.plotRGB(cratere, 1, 2, 3)
im.plotRGB(cratere, 2, 1, 3)

# importing Copernicus data
soil <- rast("c_gls_SSM1km_202404160000_CEURO_S1CSAR_V1.2.1.nc")
plot(soil)
plot(soil[[1]])


# cropping data
ext <- c(25, 35, 58, 62)
soilcrop <- crop(soil, ext)

#per la prossima lezione sarà dedicata a calcolare la variabilità geomorfologica del ghiaccio, essendo un ambiente molto variabile

#LEZIONE 10

# Measuring variability from satellite imagery
#oggi parleremo della misurazione della variabilità spaziale utilizzando immagini satellitari
#calcolando in particolare la deviazione standard (SD) su diverse finestre spaziali, per evidenziare la variabilità delle bande spettrali di un'immagine.
library(imageRy)
#Pacchetto per lavorare con immagini raster in modo semplice
library(terra)
#Per manipolare e analizzare dati raster geospaziali
#install.packages("viridisLite")
# install.packages("viridis")
library(viridisLite)
library(viridis)
#Fornisce una palette di colori visivamente piacevole e adatta alla rappresentazione dei dati. Soprattutto per tutte le persone colorblind

#quando si vuole passare da una misura ad un'altra, da una grandezza ad un'altra, lo si può fare solamente da dimensioni più grandi a dimensioni più piccole
#es. cubo quadrimensionale a tre dimensioni
#questa è la stessa cosa che faremo per le bande, vogliamo indurre un sistema bidimensionale, di due bande, in una sola banda; oppure un sistema tridimensionale con due bande o una sola
#in generale vogliamo ridurre il sistema di multibande che abbiamo a disposizione
#Questo è uno dei metodi, si chiama Analisi delle componenti principali-> PCA
#per es. abbiamo due variabili che sono molto correlate tra di loro, c'è una correlazione altissima, per cui al posto di usare questi due assi posso usare un nuovo sistema di bande
#che si chiamano argomenti principali, dove una delle due ha una varianza spiegata più alta della seconda
#abbiamo le nostre due bande: banda 1 e banda 2, che può essere per es. rosso ed infrarosso; ammettiamo di avere i pixel e vedere che le due bande siano molto correlate tra loro
#la variazione in questa variazione molto alta, quasi 1:1, abbiamo bisogno di due bande per visualizzare tutti questi pixel
#possiamo vedere che la variazione dei vari pixel è motivata, contiene il 50% di variazione, ovvero la prima banda, la banda n1 va da qui a qui per spiegare tutta la variazione, la seconda ...
#questi due segmenti sono uguali l'uno con l'altro, quindi la variabilità di un sistema si dice che è spiegata per un 50% dalla prima banda e per il 50% dalla seconda
#abbiamo una nuvola di punti che sono molto correlati tra loro e quindi la variazione sulla x è esattamente uguale alla variazione sulla y
#si dice spiegare la varianza in un linguaggio statistico, con una delle due bande spiega il 50% della variabilità totale
#abbiamo bisogno di un vettore per capire come è fatto il sistema, perché in questo momento i punti sono correlati ed ognuna delle due spiega il 50%
#si può fare un nuovo asse, che si chiama componente principale numero 1, e che per definizione passa sul lato più variabile di tutto il sistema
#il secondo asse sarà perpendicolare al primo come erano gli assi principali, e si chiama seconda componente principale, PC2; questa è una delle tante analisi multivariate che si possono fare
#c'è l'analisi della corrispondenza, analisi delle corrispondenze canoniche, analisi delle componenti principali
#la componente principale numero 1 ha una variabilità enorme, perché i suoi valori sono molto elevati; mentre la componente numero due è più ristretta
#mentre nel primo sistema avevamo degli assi per cui ognuna delle due componenti era rappresentata al 50% della variabilità
#in questo caso abbiamo la componente principale numero 1 in realtà di tutto il sistema rappresenta per es. il 90%; mentre solo il 10% viene spiegato solo dalla componente principale
#mentre gli assi iniziali ognuno aveva il 50% di variabilità, nelle componenti principali, ovvero negli assi variati, abbiamo la prima che ha praticamente il 90% della variabilità e la seconda che ha solo un pezzettino
#se noi applichiamo questa trasformazione, possiamo rimuovere la componente numero 2, perché perderemo solo il 10% dell'informazione, e mantenere solo la prima che ci mantiene il 90%
#per cui noi invece di usare il sistema con tutte le bande, noi ne vogliamo usare una sola, ovvero quella che ha la più alta variabilità del sistema

im.list()
#Mostra le immagini disponibili nel pacchetto imageRy o nella directory di lavoro.

sent <- im.import("sentinel.png")
#Importa l'immagine chiamata sentinel.png e la assegna all'oggetto sent
sent
#ci permette direttamente di plottare l'interno blocco la funzione im.import()
#abbiamo visto però che c'è una banda in più in questa immagine, ovvero quella che è sentinel_4, che deriva dalla esportazione però, solo dal fatto che ho fatto esportazione, quindi la si può anche rimuovere
#intento plottiamo l'immagine sent con le sue varie bande, per la banda 1 avremo il vicino infrarosso ecc. 
im.plotRGB(sent, 1, 2, 3)
# NIR = band 1
# red = band 2
# green = band 3
#la quarta banda la dobbiamo eliminare, ci sono vari metodi
#invece di eliminarla dal set presente, abbiamo la possibilità di fare un pacchetto di varie bande attraverso una funzione che si chiama stack()
#stack() serve a tenere insieme le bande
#quindi possiamo fare uno stack delle 3 bande iniziali, la banda n1,2,3
stack <- c(sent[[1]], sent[[2]], sent[[3]])
plot(stack)
#ho levato quindi una dimensione, al posto di essere quarta dimensione ora ha 3 dimensioni, non aveva senso tenerla

#vediamo ora quanto sono correlati questi pixel
#abbiamo tre immagini, ora lavoriamo sulle prime due immagini, vediamo come sono correlati tra loro, vedo i vari pixel come si distribuiscono nella prima banda, poi nella seconda banda, ed il suo valore nella sua posizione
#possiamo fare tutte le correlazioni tra tutte e tre le bande 
pairs(stack)
#ci fa una analisi di tutte le correlazioni che ci sono, una comparazione, per dimostrare che sono n*(n-1)/2, facciamo la prima per la seconda, la prima con la terza e la seconda con la terza (perché poi le altre sono la stessa cosa)
#quindi abbiamo tre correlazioni -> 3*(3-1)/2=3 
#lo facciamo con pairs(), del nostro dataset che si chiama stack
#qui ci ha già quindi calcolato la quantità di correlazione tra le varie bande: infrarosso, rosso e verde
#nel primo pannello, abbiamo la distribuzione dei pixel nelle tre bande
#poi abbiamo la correlazione in termini grafici tra la prima banda e la seconda, tra la prima banda e la terza e tra la seconda banda e la terza
#abbiamo poi i valori dell'indice di correlazione che si chiama correlazione di Pearson, che va da -1 a 1
#1 è la correlazione perfetta, i valori corrispondono alle due bande
# -1 è la correlazione perfetta ma negativa, è la stessa cosa solo opposta
#questo è il metodo per andare a vedere quanto sono correlate tra loro le bande
#se avevamo la quarta banda, la correlazione era 0, perché è sempre uguale, aveva un solo valore, per cui non era correlata con le altre, le altre variano mentre lei rimane fissa


im.plotRGB(sent, r=2, g=1, b=3)
#Questa modifica l'ordine delle bande per la visualizzazione:
#Rosso: banda 2 (Red)
#Verde: banda 1 (Near Infrared - NIR)
#Blu: banda 3 (Green)
#questa visualizzazione può mettere in evidenza aspetti specifici dell'immagine, es. vegetazione

#Esplorazione della banda NIR
#associo, siccome so che la prima banda è l'infrarosso, nir alla prima banda di sent
nir <- sent[[1]]
cl <- colorRampPalette(c("red","orange","yellow"))(100)
plot(nir, col=cl)

#Calcolo della deviazione standard (SD)
sd3 <- focal(nir, matrix(1/9, 3, 3), fun=sd)
#focal(): Applica una funzione (qui la deviazione standard) su una finestra mobile intorno a ogni pixel. 
#La finestra è una matrice 3x3: matrix(1/9, 3, 3).
#fun=sd: Calcola la deviazione standard all'interno della finestra.
#plot(sd3): Mostra il risultato come una mappa della variabilità locale.
plot(sd3)

viridisc <- colorRampPalette(viridis(7))(256)
plot(sd3, col=viridisc)
#viridis(7): Crea una palette di 7 colori usando la libreria viridis.
#plot(sd3, col=viridisc): Visualizza la mappa della SD con una palette visivamente ottimale

# Standard deviation 7x7
#SD su una finestra più grande
sd7 <- focal(nir, matrix(1/49, 7, 7), fun=sd)
plot(sd7, col=viridisc)
#Calcola la SD su una finestra 7x7. Una finestra più grande evidenzia variazioni più ampie e riduce i dettagli locali.

#Creazione di uno stack
# stack
stacksd <- c(sd3, sd7)
#c(sd3, sd7): Crea uno stack combinando le mappe della SD (3x3 e 7x7).
plot(stacksd, col=viridisc)
#plot(stacksd): Visualizza entrambe le mappe SD affiancate.

# Standard deviation 13x13
#SD su una finestra ancora più grande
#Calcola la SD su una finestra 13x13, catturando variazioni su scale ancora più ampie.
sd13 <- focal(nir, matrix(1/169, 13, 13), fun=sd)
stacksd <- c(sd3, sd7, sd13)
#Combina le tre mappe di SD (3x3, 7x7, 13x13) per confrontare la variabilità su diverse scale.
plot(stacksd, col=viridisc)

#Questo script analizza la variabilità spaziale di una banda spettrale (NIR) dell'immagine satellitare.
#La deviazione standard evidenzia aree con maggiore variabilità dei valori di pixel, che potrebbero corrispondere a differenze nel tipo di copertura del suolo, nella vegetazione o in altre caratteristiche.
#Variabilità locale: Mappe di SD (3x3) mostrano piccole variazioni.
#Variabilità regionale: Mappe di SD (7x7, 13x13) mostrano tendenze più ampie.
#Confronti visivi: Le diverse scale di SD aiutano a identificare regioni di interesse. Ad esempio, in una banda NIR, variazioni alte potrebbero rappresentare zone con diversi tipi di vegetazione o umidità del suolo.

#LEZIONE 11

#quando si vuole passare da una misura ad un'altra, da una grandezza ad un'altra, lo si può fare solamente da dimensioni più grandi a dimensioni più piccole
#es. cubo quadrimensionale a tre dimensioni
#questa è la stessa cosa che faremo per le bande, vogliamo indurre un sistema bidimensionale, di due bande, in una sola banda; oppure un sistema tridimensionale con due bande o una sola
#in generale vogliamo ridurre il sistema di multibande che abbiamo a disposizione
#Questo è uno dei metodi, si chiama Analisi delle componenti principali-> PCA
#per es. abbiamo due variabili che sono molto correlate tra di loro, c'è una correlazione altissima, per cui al posto di usare questi due assi posso usare un nuovo sistema di bande
#che si chiamano argomenti principali, dove una delle due ha una varianza spiegata più alta della seconda
#abbiamo le nostre due bande: banda 1 e banda 2, che può essere per es. rosso ed infrarosso; ammettiamo di avere i pixel e vedere che le due bande siano molto correlate tra loro
#la variazione in questa variazione molto alta, quasi 1:1, abbiamo bisogno di due bande per visualizzare tutti questi pixel
#possiamo vedere che la variazione dei vari pixel è motivata, contiene il 50% di variazione, ovvero la prima banda, la banda n1 va da qui a qui per spiegare tutta la variazione, la seconda ...
#questi due segmenti sono uguali l'uno con l'altro, quindi la variabilità di un sistema si dice che è spiegata per un 50% dalla prima banda e per il 50% dalla seconda
#abbiamo una nuvola di punti che sono molto correlati tra loro e quindi la variazione sulla x è esattamente uguale alla variazione sulla y
#si dice spiegare la varianza in un linguaggio statistico, con una delle due bande spiega il 50% della variabilità totale
#abbiamo bisogno di un vettore per capire come è fatto il sistema, perché in questo momento i punti sono correlati ed ognuna delle due spiega il 50%
#si può fare un nuovo asse, che si chiama componente principale numero 1, e che per definizione passa sul lato più variabile di tutto il sistema
#il secondo asse sarà perpendicolare al primo come erano gli assi principali, e si chiama seconda componente principale, PC2; questa è una delle tante analisi multivariate che si possono fare
#c'è l'analisi della corrispondenza, analisi delle corrispondenze canoniche, analisi delle componenti principali
#la componente principale numero 1 ha una variabilità enorme, perché i suoi valori sono molto elevati; mentre la componente numero due è più ristretta
#mentre nel primo sistema avevamo degli assi per cui ognuna delle due componenti era rappresentata al 50% della variabilità
#in questo caso abbiamo la componente principale numero 1 in realtà di tutto il sistema rappresenta per es. il 90%; mentre solo il 10% viene spiegato solo dalla componente principale
#mentre gli assi iniziali ognuno aveva il 50% di variabilità, nelle componenti principali, ovvero negli assi variati, abbiamo la prima che ha praticamente il 90% della variabilità e la seconda che ha solo un pezzettino
#se noi applichiamo questa trasformazione, possiamo rimuovere la componente numero 2, perché perderemo solo il 10% dell'informazione, e mantenere solo la prima che ci mantiene il 90%
#per cui noi invece di usare il sistema con tutte le bande, noi ne vogliamo usare una sola, ovvero quella che ha la più alta variabilità del sistema


# how to make multivariate analysis in R with remote sensing data

library(terra)
library(imageRy)
library(viridis) # for the final plot

im.list()

b2 <- im.import("sentinel.dolomites.b2.tif")  
b3 <- im.import("sentinel.dolomites.b3.tif")  
b4 <- im.import("sentinel.dolomites.b4.tif")  
b8 <- im.import("sentinel.dolomites.b8.tif")  
#im.import importa le bande di un'immagine satellitare come oggetti raster.
#Ogni banda corrisponde a una diversa lunghezza d'onda del satellite Sentinel-2:
#b2: Banda del blu (490 nm)
#b3: Banda del verde (560 nm)
#b4: Banda del rosso (665 nm)
#b8: Banda dell'infrarosso vicino (NIR, 842 nm)


sentdo <- c(b2, b3, b4, b8)
#creazione di un oggetto stack
#Combina le bande in un unico oggetto stack (multistrato). Questo permette di trattarle insieme per analisi multivariate.

im.plotRGB(sentdo, 4, 3, 2)
#per la prima banda prendiamo l'elemento di sentdo nella quarta posizione, che sarebbe l'infrarosso b8
#Questo è noto come falso colore: l'uso del NIR nella banda rossa evidenzia la vegetazione (rosso brillante).

pairs(sentdo)
#grafico delle relazioni tra bande
#Crea una matrice di grafici di dispersione per visualizzare le correlazioni tra ogni coppia di bande.
#Utile per verificare la relazione (lineare o non lineare) tra le bande spettrali, ad esempio, per individuare ridondanze.


#adesso andiamo a compattare questo dataset al posto di usare tutte e tre le bande, vediamo se è possibile compattarlo in una sola dimensione
#PCA
#la prima cosa che dobbiamo fare è che siccome questa analisi non si può fare direttamente sull'immagine, dobbiamo prendere un campione, ovvero una serie di pixel random, e su quella serie andare ad operare questa analisi delle componenti principali
#la prima funzione che dobbiamo usare è samplerandom() del pacchetto raster però, prende un pacchetto random dei nostri pixel-> dobbiamo scrivere il numero, la size, del quantitativo di pixel che vogliamo prendere
#più il campione è grande e meglio è-> così abbiamo per es. i 10 mila pixel ed i loro valori nelle varie bande
#mi aspetto che i valori siano diversi tra di loro
#in questo caso ho preso i campioni e li ho immessi in una sola dimensione


#la funzione summary() è colei che fa i sommari delle varie analisi, per cui da tutto il report dell'output



# pca
#PCA: Analisi delle Componenti Principali
pcimage <- im.pca(sentdo)
#im.pca calcola la PCA sulle bande dello stack.
#La PCA riduce la dimensionalità e combina le bande in componenti principali (PCs), ordinandole per importanza (varianza spiegata).
#Ad esempio: PC1 rappresenta la maggior parte della varianza nei dati. PC2 rappresenta la seconda direzione di varianza più importante, e così via.
#L'output pcimage è un raster multibanda, dove ogni banda corrisponde a una componente principale.

#calcolo della varianza spiegata
tot <- sum(1314.33400, 551.50879, 39.48238, 27.35780)
1314.33400 * 100 / tot
#Calcola la percentuale di varianza spiegata dalla prima componente principale (PC1).
#Ad esempio: La somma totale delle varianze di tutte le componenti è calcolata. La varianza spiegata dalla PC1 è divisa per il totale e moltiplicata per 100.

#visualizzazione della PCA
plot(pcimage, col=viridis(100))
plot(pcimage, col=plasma(100))
#plot visualizza ogni componente principale come immagini raster, con gradazioni di colore:
#viridis o plasma sono palette di colori per rappresentare i dati in modo chiaro e percettivamente uniforme.
#Le immagini risultanti mostrano come le diverse componenti principali catturano variazioni nei dati spettrali.

#quindi oggi cosa abbiamo fatto:
#Analizzare immagini multibanda: Importa le bande di un'immagine satellitare per eseguire analisi multivariate.
#Visualizzare i pattern principali: Un composito RGB aiuta a interpretare le proprietà visive delle bande. La PCA aiuta a ridurre la ridondanza e identificare i pattern più importanti nei dati.
#Supportare applicazioni pratiche: Identificare coperture del suolo (es. vegetazione, suolo, acqua). Migliorare l'interpretazione delle immagini satellitari per scopi ecologici, climatici o di gestione territoriale.
